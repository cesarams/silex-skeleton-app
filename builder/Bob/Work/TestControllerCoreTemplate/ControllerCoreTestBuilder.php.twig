{% extends "base/common.php.twig" %}

{% block functions %}

    /**
     * @var string
     */
    private $controllerName = '{{ tableName }}';

    /**
     * createApplication
     *
     * @return mixed|\Symfony\Component\HttpKernel\HttpKernel
     */
    public function createApplication()
    {
        return include $_SERVER['APP_DIR'] . "/app_test.php";
    }

    /**
     * testGet
     *
     * @return void
     */
    public function testGet()
    {
        $client = static::createClient();
        $client->request('GET', "/$this->controllerName/");
        $response = $client->getResponse();
        $data = json_decode($response->getContent(), true);

        $expected = array('id' => '2', {% for key,value in properties %}'{{ key }}'=>{% if value == 'string' %}'test_{{ key }}_{{ value }}'{% endif %}{% if value == 'integer' %}'0'{% endif %}{% if not loop.last %},{% endif %}{% endfor %});

        $actual = $data[1];
        $this->assertSame($expected, $actual);
    }

    /**
     * testGetinputId1
     *
     * @return void
     */
    public function testGetInputId1()
    {
        $inputId = "1";
        $client = static::createClient();
        $client->request('GET', "/$this->controllerName/$inputId");
        $response = $client->getResponse();
        $data = json_decode($response->getContent(), true);

        $expected = array('id' => '1', {% for key,value in properties %}'{{ key }}'=>{% if value == 'string' %}'test_{{ key }}_{{ value }}'{% endif %}{% if value == 'integer' %}'0'{% endif %}{% if not loop.last %},{% endif %}{% endfor %});

        $actual = $data;
        $this->assertSame($expected, $actual);
    }

    /**
     * testPostinputNameFooBar
     *
     * @return void
     */
    public function testPostInputNameFooBar()
    {
        $input = array({% for key,value in properties %}'{{ key }}'=>'test_{{ tableName }}_name_Foo_Bar'{% if not loop.last %},{% endif %}{% endfor %});

        $client = static::createClient();

        $client->request('GET', "/$this->controllerName/");
        $expected = count(json_decode($client->getResponse()->getContent(), true));

        $client->request('POST', "/$this->controllerName/", $input);
        $client->request('GET', "/$this->controllerName/");
        $actual = count(json_decode($client->getResponse()->getContent(), true));

        $this->assertGreaterThan($expected, $actual);
    }

    /**
     * testPutinputId2NameFooBar
     *
     * @return void
     */
    public function testPutInputId2NameFooBar()
    {
        $inputId = "2";
        $input = array({% for key,value in properties %}'{{ key }}'=>'test_{{ tableName }}_name_Foo_Bar'{% if not loop.last %},{% endif %}{% endfor %});

        $client = static::createClient();

        $client->request('PUT', "/$this->controllerName/$inputId", $input);
        $client->request('GET', "/$this->controllerName/$inputId");

        $expected = array('id' => '2', {% for key,value in properties %}'{{ key }}'=>{% if value == 'string' %}'test_{{ tableName }}_name_Foo_Bar'{% endif %}{% if value == 'integer' %}'0'{% endif %}{% if not loop.last %},{% endif %}{% endfor %});

        $actual = json_decode($client->getResponse()->getContent(), true);

        $this->assertSame($expected, $actual);
    }

    /**
     * testDeleteinputId5
     *
     * @return void
     */
    public function testDeleteInputId2()
    {
        $inputId = '2';

        $client = static::createClient();

        $client->request('GET', "/$this->controllerName/");
        $expected = count(json_decode($client->getResponse()->getContent(), true)) - 1;

        $client->request('DELETE', "/$this->controllerName/$inputId");
        $client->request('GET', "/$this->controllerName/");
        $actual = count(json_decode($client->getResponse()->getContent(), true));

        $this->assertSame($expected, $actual);
    }
{% endblock %}